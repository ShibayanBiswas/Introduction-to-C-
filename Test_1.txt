
(a) Find the output:
int p = 100;
if(p > 20) {
    if(p < 20) {
        printf("coding");
    }
} else {
    printf("ninjas");
}

Answer: No Output 

(b) Write the correct order(s) of statements.
We want to print "Coding Ninjas" 10 times.
1.  while(x <= 10) {
2.  int x = 1;
3.  x += 1;
4.  cout<<"Coding Ninjas"<<endl;
5.  }

Answer: 2 1 4 3 5, 2 1 3 4 5 

(c) Figure out the output
int x = 10;
while(x >= 0) {
    x = x - 1;
    cout<<x;
    x--;
}

Answer: 97531-1 

(d) Print the following pattern for the given number of rows.
Pattern for N = 4
   1
  212
 32123
4321234

Answer:	#include<iostream>
	using namespace std;
	int main(){
    		int n;
    		cin >> n;
    		int i, j, k, l;
    		for (i = 1; i <= n; i++){
        		for (j = n; j > i; j--){
            			cout << (" ");
        		}
        		for (k = i; k >= 1; k--){
            			cout << k;
        		}
        		for (l = 2; l <= i; l++){
            			cout << l;
        		}
        		cout<<"\n";
    		}
	}

(e) Print the following pattern for given number of rows:
Sample Input :
  5
Sample Output :
  1234554321
  1234**4321
  123****321
  12******21
  1********1	

Answer: #include<iostream>
	using namespace std;
	int main(){
    		int i, j, n, k;
    		cin >>n;
    		for(i = n; i>=1;i--){
        		for( j = 1 ; j<= n;j++){
            			if(j<=i)
                			cout << j;
            			else
                			cout << "*";
            
        		}
    
    			for(j = n ;j>=1;j--){
        			if(j<=i)
        				cout <<j;
        			else
            				cout <<"*";
    			}
        		cout <<endl;
    		}
	}

(e) Take input a stream of n integer elements, find the second largest element present.
The given elements can contain duplicate elements as well. If only 0 or 1 element is given, the second largest should be INT_MIN (-2^31).
Sample Input:
 4
 3 9 0 9
Sample Output:
 3

Answer: #include <iostream>
	#include <climits>
	using namespace std;
	int main() {
    		int n;
    		cin >> n;
    		int max = INT_MIN, secondMax = INT_MIN;
    		int num;
    		int count = 1;
    		while(count <= n) {
        		cin >> num;
        		if(num > max) { 
            			secondMax = max;
            			max = num;
        		} 
        		else if(num > secondMax && num != max) {
            			secondMax = num;
        		}
        		count++;
    		}
    		cout << secondMax << endl;
	}





